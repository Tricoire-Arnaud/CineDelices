<!-- Cette page ne marche pas car dans les routes, recipes/catalog marche uniquement-->


    <main class="container mx-auto px-4 py-8">
        <!-- En-tête du catalogue -->
        <div class="text-center mb-12">
            <h1 class="text-4xl font-bold text-gray-900 mb-4">Catalogue des Recettes</h1>
            <p class="text-lg text-gray-600 max-w-2xl mx-auto">
                Découvrez notre collection de recettes inspirées de vos films et séries préférés
            </p>
        </div>

        <!-- Barre de recherche -->
        <div class="max-w-2xl mx-auto mb-12">
            <div class="relative">
                <input type="search" placeholder="Rechercher une recette..."
                    class="w-full pl-12 pr-4 py-3 rounded-full border border-gray-200 focus:border-orange-500 focus:ring-2 focus:ring-orange-200 transition-all duration-200">
                <span class="absolute left-4 top-1/2 transform -translate-y-1/2">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                </span>
            </div>
        </div>

        <!-- Filtres et tri -->
        <div class="flex flex-col md:flex-row justify-between items-center mb-8 space-y-4 md:space-y-0">
            <!-- Filtres par catégorie -->
            <div class="flex flex-wrap gap-2">
                <button data-category="all"
                    class="filter-btn px-4 py-2 rounded-full bg-orange-500 text-white hover:bg-orange-600 transition-colors duration-200">
                    Tous
                </button>
                <button data-category="Entrée"
                    class="filter-btn px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200">
                    Entrées
                </button>
                <button data-category="Plat principal"
                    class="filter-btn px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200">
                    Plats
                </button>
                <button data-category="Dessert"
                    class="filter-btn px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200">
                    Desserts
                </button>
                <button data-category="Boisson"
                    class="filter-btn px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200">
                    Boissons
                </button>
                <button data-category="Snack"
                    class="filter-btn px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200">
                    Snacks
                </button>
                <button data-category="Apéritif"
                    class="filter-btn px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200">
                    Apéritifs
                </button>
            </div>

            <!-- Tri -->
            <div class="flex items-center space-x-2">
                <label class="text-gray-700">Trier par:</label>
                <select class="border-gray-200 rounded-lg focus:border-orange-500 focus:ring-2 focus:ring-orange-200">
                    <option value="recent">Plus récents</option>
                    <option value="popular">Plus populaires</option>
                    <option value="rating">Mieux notés</option>
                </select>
            </div>
        </div>

        <div>
            <% if (noResults) { %> 
                <!-- on peut aussi mettre  && currentQueryRecipes.trim() !== "" -->
                <p>Aucun résultat pour "<%= currentQueryRecipes %>"</p>
                <div>
                    <% recipes.forEach(function(recipe) { %>
                        <div>
                            <h3><%= recipe.titre %></h3>
                            <p>Catégorie : <%= recipe.category.libelle %></p>
                            <p>Type : <%= recipe.Movie.type %></p>
                        </div>
                    <% }) %>
                </div>
            <% } else { %>
                <!-- Grille des recettes -->
                <div id="recipes-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    <% recipes.forEach((recipe, index) => { %>
                        <article class="recipe-card bg-white rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden group" data-category="<%= recipe.category.libelle %>">
                            <div class="relative aspect-video overflow-hidden">
                                <img src="/images/<%= recipe.image %>" alt="<%= recipe.titre %>" class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                                <span class="absolute top-4 right-4 px-3 py-1 bg-black/50 text-white text-sm rounded-full backdrop-blur-sm">
                                    <%= recipe.category.libelle %>
                                </span>
                            </div>
        
                            <div class="p-6">
                                <h3 class="text-xl font-semibold mb-2 group-hover:text-orange-500 transition-colors duration-200">
                                    <%= recipe.titre %>
                                </h3>
                                <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                                    <%= recipe.description %>
                                </p>
        
                                <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                    <div class="flex items-center">
                                        <div class="flex">
                                            <% for(let i = 0; i < 5; i++) { %>
                                                <svg class="w-4 h-4 <%= i < recipe.rating ? 'text-yellow-400' : 'text-gray-300' %>" fill="currentColor" viewBox="0 0 20 20">
                                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                                </svg>
                                            <% } %>
                                        </div>
                                        <span class="ml-2">(<%= recipe.reviews %>)</span>
                                    </div>
                                    <div class="flex items-center">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                        </svg>
                                        <%= recipe.temps_preparation %> min
                                    </div>
                                </div>
        
                                <a href="/recette/<%= recipe.id_recette %>" class="block text-center py-3 px-4 bg-orange-500 text-white rounded-full hover:bg-orange-600 transition-all duration-300 transform hover:-translate-y-0.5">
                                    Voir la recette
                                </a>
                            </div>
                        </article>
                    <% }) %>
                </div>
            <% } %>
        </div>
           

                                    <!-- Grille des recettes -->
                                    <!-- <div id="recipes-container"
                                        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                                        <% recipes.forEach((recipe, index)=> { %>
                                            <article
                                                class="recipe-card bg-white rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden group"
                                                data-category="<%= recipe.category.libelle %>">
                                                <div class="relative aspect-video overflow-hidden">
                                                    <img src="/images/<%= recipe.image %>" alt="<%= recipe.titre %>"
                                                        class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                                                    <span
                                                        class="absolute top-4 right-4 px-3 py-1 bg-black/50 text-white text-sm rounded-full backdrop-blur-sm">
                                                        <%= recipe.category.libelle %>
                                                    </span>
                                                </div>

                                                <div class="p-6">
                                                    <h3
                                                        class="text-xl font-semibold mb-2 group-hover:text-orange-500 transition-colors duration-200">
                                                        <%= recipe.titre %>
                                                    </h3>
                                                    <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                                                        <%= recipe.description %>
                                                    </p>

                                                    <div
                                                        class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                                        <div class="flex items-center">
                                                            <div class="flex">
                                                                <% for(let i=0; i < 5; i++) { %>
                                                                    <svg class="w-4 h-4 <%= i < recipe.rating ? 'text-yellow-400' : 'text-gray-300' %>"
                                                                        fill="currentColor" viewBox="0 0 20 20">
                                                                        <path
                                                                            d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                                                    </svg>
                                                                    <% } %>
                                                            </div>
                                                            <span class="ml-2">(<%= recipe.reviews %>)</span>
                                                        </div>
                                                        <div class="flex items-center">
                                                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor"
                                                                viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round"
                                                                    stroke-width="2"
                                                                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                            </svg>
                                                            <%= recipe.temps_preparation %> min
                                                        </div>
                                                    </div>

                                                    <a href="/recipes/<%= recipe.id %>"
                                                        class="block text-center py-3 px-4 bg-orange-500 text-white rounded-full hover:bg-orange-600 transition-all duration-300 transform hover:-translate-y-0.5">
                                                        Voir la recette
                                                    </a>
                                                </div>
                                            </article>
                                            <% }) %>
                                    </div>  -->


                                    <!-- Pagination -->
                                    <div class="mt-12 flex justify-center">
                                        <nav class="flex items-center space-x-2" aria-label="Pagination">
                                            <button id="prev-page"
                                                class="p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed">
                                                <svg class="w-5 h-5" fill="none" stroke="currentColor"
                                                    viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                        stroke-width="2" d="M15 19l-7-7 7-7" />
                                                </svg>
                                            </button>

                                            <div id="page-numbers" class="flex items-center space-x-2">
                                                <!-- Les numéros de page seront générés dynamiquement -->
                                            </div>

                                            <button id="next-page"
                                                class="p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed">
                                                <svg class="w-5 h-5" fill="none" stroke="currentColor"
                                                    viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                        stroke-width="2" d="M9 5l7 7-7 7" />
                                                </svg>
                                            </button>
                                        </nav>
                                    </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const recipesPerPage = 9;
            const recipeCards = document.querySelectorAll('.recipe-card');
            let totalRecipes = recipeCards.length;
            let totalPages = Math.ceil(totalRecipes / recipesPerPage);
            let currentPage = 1;
            let currentFilter = 'all';

            const prevButton = document.getElementById('prev-page');
            const nextButton = document.getElementById('next-page');
            const pageNumbers = document.getElementById('page-numbers');
            const filterButtons = document.querySelectorAll('.filter-btn');

            // Fonction pour afficher les recettes de la page courante
            function showRecipesForPage(page) {
                const start = (page - 1) * recipesPerPage;
                const end = start + recipesPerPage;
                let visibleCount = 0;

                recipeCards.forEach(card => {
                    // Vérifier si la carte correspond au filtre actuel
                    const cardCategory = card.getAttribute('data-category');
                    const matchesFilter = currentFilter === 'all' || cardCategory === currentFilter;

                    if (matchesFilter) {
                        if (visibleCount >= start && visibleCount < end) {
                            card.style.display = 'block';
                        } else {
                            card.style.display = 'none';
                        }
                        visibleCount++;
                    } else {
                        card.style.display = 'none';
                    }
                });

                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            }

            // Fonction pour mettre à jour les boutons de pagination
            function updatePagination() {
                const visibleRecipes = Array.from(recipeCards).filter(card => {
                    const cardCategory = card.getAttribute('data-category');
                    return currentFilter === 'all' || cardCategory === currentFilter;
                }).length;

                totalPages = Math.ceil(visibleRecipes / recipesPerPage);

                prevButton.disabled = currentPage === 1;
                nextButton.disabled = currentPage === totalPages;

                // Générer les numéros de page
                pageNumbers.innerHTML = '';

                // Calcul des pages à afficher
                let startPage = Math.max(1, currentPage - 2);
                let endPage = Math.min(totalPages, startPage + 4);

                if (endPage - startPage < 4) {
                    startPage = Math.max(1, endPage - 4);
                }

                // Première page et ellipsis
                if (startPage > 1) {
                    addPageButton(1);
                    if (startPage > 2) {
                        pageNumbers.appendChild(createEllipsis());
                    }
                }

                // Pages numérotées
                for (let i = startPage; i <= endPage; i++) {
                    addPageButton(i);
                }

                // Dernière page et ellipsis
                if (endPage < totalPages) {
                    if (endPage < totalPages - 1) {
                        pageNumbers.appendChild(createEllipsis());
                    }
                    addPageButton(totalPages);
                }
            }

            function addPageButton(pageNum) {
                const button = document.createElement('button');
                button.className = `px-4 py-2 rounded-lg transition-colors duration-200 ${currentPage === pageNum ? 'bg-orange-500 text-white' : 'hover:bg-gray-100'
                    }`;
                button.textContent = pageNum;
                button.addEventListener('click', () => {
                    if (currentPage !== pageNum) {
                        currentPage = pageNum;
                        showRecipesForPage(currentPage);
                        updatePagination();
                    }
                });
                pageNumbers.appendChild(button);
            }

            function createEllipsis() {
                const span = document.createElement('span');
                span.className = 'px-4 py-2 text-gray-500';
                span.textContent = '...';
                return span;
            }

            // Fonction de filtrage
            function filterRecipes(category) {
                currentFilter = category;
                currentPage = 1;

                // Mettre à jour les boutons de filtre
                filterButtons.forEach(btn => {
                    if (btn.getAttribute('data-category') === category) {
                        btn.classList.remove('bg-gray-100', 'text-gray-700');
                        btn.classList.add('bg-orange-500', 'text-white');
                    } else {
                        btn.classList.remove('bg-orange-500', 'text-white');
                        btn.classList.add('bg-gray-100', 'text-gray-700');
                    }
                });

                showRecipesForPage(1);
                updatePagination();
            }

            // Event Listeners
            prevButton.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    showRecipesForPage(currentPage);
                    updatePagination();
                }
            });

            nextButton.addEventListener('click', () => {
                if (currentPage < totalPages) {
                    currentPage++;
                    showRecipesForPage(currentPage);
                    updatePagination();
                }
            });

            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const category = button.getAttribute('data-category');
                    filterRecipes(category);
                });
            });

            // Initialisation
            filterRecipes('all');
        });
    </script>

